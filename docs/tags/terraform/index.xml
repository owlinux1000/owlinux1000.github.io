<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on $ make life</title>
    <link>https://owlinux1000.github.io/tags/terraform/</link>
    <description>Recent content in Terraform on $ make life</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 18 May 2019 12:24:26 +0900</lastBuildDate>
    
	<atom:link href="https://owlinux1000.github.io/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Terraform でConoha のインスタンスを立ててみる</title>
      <link>https://owlinux1000.github.io/blog/terraform_for_conoha/</link>
      <pubDate>Sat, 18 May 2019 12:24:26 +0900</pubDate>
      
      <guid>https://owlinux1000.github.io/blog/terraform_for_conoha/</guid>
      <description>はじめに 最近(?)、自分の中で触ってみたかった技術の1つにTerraformがある。そこで今回は、Terraform でConoha のインスタンスを立ててみる。自分の中での理解をまとめているので間違いあれば教えてください。
Terraform とは Terraform は、Vagrant などで有名なHashiCorp が開発しているツールで、クラウドサービスやOpenStack を対象に、独自の定義ファイルを用いてインスタンスの管理（構築・削除）を行うことができる。定義ファイルには、HCL を用いて主にtf ファイルに記載していく。私の第一印象としては、Ruby のDSL のような雰囲気を感じるが、Vagrantfile ほどRuby 感はない。どちらかというとjson などに近い雰囲気だ。
Terraform のインストール 今回は、MacBook Proで行っているので、brew 経由でインストールする。
$ brew install terraform また、HCLを書いていくためエディタ側にもプラグイン等をインストールしてあげよう。渡しの場合は、Emacsのhcl-modeを導入してみた。
定義ファイルの作成 今回は、main.tf というファイル名で以下の内容を作成した。以下の内容は、ほぼ参考記事 と同一である。今回は、勉強も兼ねているので、これを丁寧に読み解いていく。
まずはじめに、Provider の設定だ。
provider &amp;quot;openstack&amp;quot; { user_name = &amp;quot;hgoehoge&amp;quot; password = &amp;quot;hagehage&amp;quot; tenant_name = &amp;quot;fugafuga&amp;quot; auth_url = &amp;quot;https://identity.tyo1.conoha.io/v2.0&amp;quot; } Provider の設定では、provider キーワードを用いてブロックを定義する。次に、実際のProvider 名を設定するのだが、Conoha がOpenStack を使っているため、Provider にopenstack を設定する。ここには、aws やazure といった様々なクラウドサービスなどを指定することができる。今回のopenstackの場合は、API用のユーザ名やパスワード、テナントを名、認証用URLを設定する。
次に、Keypairについて見ていく。
resource &amp;quot;openstack_compute_keypair_v2&amp;quot; &amp;quot;keypair&amp;quot; { name = &amp;quot;terraform-keypair&amp;quot; public_key = &amp;quot;ssh-rsa hogehoge&amp;quot; } ここでは、構築したインスタンスにssh する際に利用する公開鍵の設定をしている。resource ブロックを用いて、リソースを定義する。resource キーワードの次に、リソースの種類、リソース名を設定する。このブロックの中では、一意に識別するためのname や公開鍵を貼り付けるpublic_key を設定している。</description>
    </item>
    
  </channel>
</rss>